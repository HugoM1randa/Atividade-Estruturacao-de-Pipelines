name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# evita dois deploys concorrentes para o mesmo ambiente
concurrency:
  group: prod-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  # --- JOB DE TESTES NODE.JS ---
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Instalar dependências
        run: npm ci

      - name: Corrigir permissões do Jest
        run: chmod +x ./node_modules/.bin/jest

      - name: Rodar testes
        run: npx jest --ci --runInBand

  # --- JOB DE DEPLOY .NET ---
  deploy:
    runs-on: ubuntu-latest
    needs: test   # só roda deploy se os testes passarem
    environment: production
    steps:
      - name: Checkout (full history p/ métricas)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Make deploy script executable
        run: chmod +x ./deploy.sh

      - name: Deploy
        id: deploy
        run: ./deploy.sh

      # --- NOTIFY SLEUTH (via API REST) ---
      - name: Notify Sleuth
        if: ${{ success() && steps.deploy.outcome == 'success' }}
        run: |
          curl -X POST "https://app.sleuth.io/api/1/deployments" \
            -H "Authorization: Bearer ${{ secrets.SLEUTH_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "environment": "production",
              "revision": "'${{ github.sha }}'",
              "repo": "'${{ github.repository }}'",
              "deployed_at": "'${{ github.event.head_commit.timestamp }}'"
            }'
